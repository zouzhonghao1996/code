

@CopyRight by SONG 



HTML5 + CSS3

学习要点：
1.HTML5 的历史
2.HTML5 的功能
3.HTML5 的特点
4.课程学习问题


HTML5 是继 HTML4.01 和 XHTML1.0 之后的超文本标记语言的最新版本。它是由一群
自由思想者组成的团队设计出来，并最终实现多媒体支持、交互性、更加智能的表单，以及
更好的语义化标记。

HTML5 并不仅仅是 HTML 规范的最新版本，而是一系列用来制作现代富 Web 内容的
相关技术的总称，其中最重要的三项技术分别为：HTML5 核心规范（标签元素）、CSS（层
叠样式表第三代）、和 JavaScript。



一．HTML5 的历史
1993 年 HTML 首次以因特网草案的形式发布，然后经历了 2.0、3.2 和 4.0，直到 1999
年的 HTML4.01 版本稳定下来。由于发展缓慢，逐渐的被更加严格的 XHTML 取代。

XHTML 的兴衰史
自从 HTML4.01 版本之后，掌握着 HTML 规范的万维网联盟（W3C）组织没有再发布新
的标准，而是围绕着 XHTML1.0 以及之后的 XHTML2.0 展开工作。XHTML 是基于 XML、致力
于实现更加严格并且统一的编码规范的 HTML 版本，解决之前 HTML4.01 版本时，由于编码
不规范导致浏览器的各种古怪行为。所以，Web 开发者对 XHTML 非常的拥护。XHTML 极大
的好处，就是强迫开发者养成良好的编码习惯，放弃 HTML 的凌乱写法，最终降低了浏览器
解析页面的难度，方便移植到更多平台。

可是，越是想往好的方面发展，往往可能是带来的却是毁灭性的灾难，世间万物就是如
此。XHTML2.0 规范了更严格的错误处理规则，强制要求浏览器拒绝无效的 XHTML2 页面，
强制 Web 开发者写出绝对正确规范的代码，同时不得向下兼容，摒弃 HTML 遗留的怪异行为
和编码习惯。按理说，取其精华、舍其糟粕应该是好事。但是，这样的话，数亿的页面将无
法兼容，Web 开发者的难度又被加大，并且制定这个标准又太过久远，最终被抛弃。

HTML5 的回归
2008 年 W3C 发布了 HTML5 的工作草案，2009 年停止了 XHTML2 计划。又过去大概一
年，HTML5 规范进一步解决了诸多非常实际的问题，各大浏览器厂商开始对旗下的产品进行
升级，以便支持 HTML5。这样，得益于浏览器的实验反馈，HTML5 规范得到了持续的进步和
完善，从而迅速融入到 Web 平台的实质性改进中。

和 XHTML2.0 不同，制定 HTML5 规范的一群人并不想挑出以往 HTML 的各种毛病为其改
正，而是尽可能的补全 Web 开发者急需的各种功能。这些功能包括更强大的 CSS3、表单验
证、音频视频、本地存储、地理定位、绘画（Canvas）、Web 通信等等。



二．HTML5 的功能
HTML5 到底涵盖了哪些功能？这些功能到底在主流的浏览器支持情况如何？

1.HTML5 核心：这部分主要由 W3C 官方的规范组成，涉及新的语义元素、新的增强的
Web 表单、音频和视频、以及通过 JavaScript 绘图的 Canvas。这部分大多数主流浏览器
均得到很好的支持；

2.曾经的 HTML5 标准：这部分主要来自于最初制定的 HTML5 规范，其中大多数功能需
要 JavaScript 且支持富 Web 应用开发。比如：本地数据存储、离线应用和消息传递；

3.非 HTML5 标准：这部分通常指下一代功能，虽然从未进入 HTML5 标准，但人们还是
会把它认做 HTML5 的一部分。这些包括最为常见的 CSS3，以及很热门的地理定位。
对于最为常用且实用的部分，基本上主流的浏览器都支持的比较好。而那些特殊需求的
部分，则需要根据不同的浏览器检测才能知道是否支持自己想要的功能。



三．HTML5 的特点
在 HTML5 发展的同时，XHTML2.0 也在不断发展，那么到底是哪些特点导致 HTML5 取
得最终的胜利呢？

1.向下兼容
对于 XHTML2.0 要求遵循规则，否则不予显示的方式，HTML5 却实行“不破坏 Web”的
原则。也就是说，以往已存在的 Web 页面，还可以保持正确的显示。
当然，面对开发者，HTML5 规范要求摒弃过去那些编码坏习惯和废弃的标签元素；而面
对浏览器厂商，要求它们兼容 HTML 遗留的一切，以做到向下兼容。

2.用户至上
HTML5 遵循“用户至上”的原则，在出现具体问题时，会把用户放在第一位，其次是开
发者，然后是浏览器厂商，最后才是规范制定者。比如，开发者在编码时不严谨导致本该出
现警告或错误时，却正常显示了页面。

3.化繁为简
HTML5 对比之前的 XHTML，做了大量的简化工作。具体如下：
(1).以浏览器的原生能力代替复杂的 JavaScript；
(2).DOCTYPE 被简化到极致；
(3).字符集声明被简化；
(4).简单强大的 API。

4.无插件范式
在 HTML5 出现之前，很多功能只能通过插件或 hack（如绘图 API）来实现，但 HTML5
原生提供了这些支持。使用插件有很多问题，具体如下：
(1).插件安装容易失败；
(2).插件被浏览器或软件禁用屏蔽（如 Flash 插件）；
(3).插件经常会被爆出漏洞被利用攻击；
(4).插件不容易与 HTML 文档其他部分集成（比如整体透明化等）。

5.访问通用性
这个原则分为三个概念：
(1).可访问性：比如更加利于残障人士的阅读方案；
(2).媒体中立：比如 HTML5 的媒体播放在不同设备或平台均能正常运行；
(3).支持所有语种：比如新元素<ruby>。

6.引入语义
HTML5 引入了一些用来区分不同含义和内容的标记元素。这种方式极大的提供的编码人
员的可读性和代码区域查询的便利性。

7.引入原生媒体支持
HTML5 的一次大改进救生衣支持在浏览器中直接播放视频和音频文件，以前都需要借助
插件才能实现此类功能。

8.引入可编程内容
HTML5 最大的变化就是引入了需要通过 JavaScript 编程才能完全的各种效果，而这些
很多都是 HTML5 原生的。那么现在 HTML5 可以理解为 HTML + CSS + JavaScript 的总称。



四．课程学习问题
学习 HTML5 需要一些测试用的浏览器、编码用的开发工具、以及建议推荐的学习方法。
1.浏览器选择
IE9+
Firefox 3.5+
Chrome 3.0+
Safari 3.0+
Opera 10.5+
这里重点要说明一下 IE 浏览器。由于历史和系统绑定原因，还有相当一部分电脑残留
IE9 以下版本的浏览器。虽然微软已经开始发表声明逐步不再维护 IE8，但这部分群体还占
有一定的份额。所以，是否要迎合这部分用户，取决于个人对市场的判断和成本的考量。

2.开发工具
本课程我们使用 Visual Studio Code / Sublime Text3 作为 HTML5 课程的编码工具。

3.学习方式
本课程原则上是零基础、初学者可学，但如果你已经有 XHTML 课程基础，那么学习起
来将非常轻松。

-----------------------------------------------------------------------------------
基本格式
学习要点：
1.HTML5 文档结构
2.文档结构解析
3.元素标签探讨

先从 HTML5 的文档结构谈起。这些基础元素确定了 HTML 文档的轮廓以及浏
览器的初始环境。几乎所有页面都必须首先键入这些元素。

一．HTML5 文档结构
1.第一步：打开 VSCode / Sublime Text 3，打开指定文件夹；
2.第二步：保存 index.html 文件到磁盘中，.html 是网页后缀；
3.第三步：开始编写 HTML5 的基本格式。

<!DOCTYPE html> //文档类型声明
<html lang="zh-cn"> //表示 HTML 文档开始
<head> //包含文档元数据开始
<meta charset="utf-8"> //声明字符编码
<title>基本结构</title> //设置文档标题
</head> //包含文档元数据结束
<body> //表示 HTML 文档内容
<a href="http://www.baidu.com">百度</a> //一个超链接元素（标签）
</body> //表示 HTML
</html> //表示 HTML 文档结束



二．文档结构解析
1.Doctype
文档类型声明（Document Type Declaration，也称 Doctype）。它主要告诉浏览器
所查看的文件类型。在以往的 HTML4.01 和 XHTML1.0 中，它表示具体的 HTML 版本和风格。
而如今 HTML5 不需要表示版本和风格了。
<!DOCTYPE html> //不分区大小写

2.html 元素
首先，元素就是标签的意思，html 元素即 html 标签。html 元素是文档开始和结尾的
元素。它是一个双标签，头尾呼应，包含内容。这个元素有一个属性和值：lang="zh-cn"，
表示文档采用语言为：简体中文。
<html lang="zh-cn"> //如果是英文则为 en

3.head 元素
用来包含元数据内容，元数据包括：<link>、<meta>、<noscript>、<script>、
<style>、<title>。这些内容用来浏览器提供信息，比如 link 提供 CSS 信息，script
提供 JavaScript 信息，title 提供页面标题等。
<head>...</head> //这些信息在页面不可见

4.meta 元素
这个元素用来提供关于文档的信息，起始结构有一个属性为：charset="utf8"。表示
告诉浏览器页面采用的什么编码，一般来说我们就用 utf8。当然，文件保存的时候也是
utf8，而浏览器也设置 utf8 即可正确显示中文。
<meta charset="utf-8"> //除了设置编码，还有别的

5.title 元素
这个元素很简单，顾名思义：设置浏览器左上角的标题。
<title>基本结构</title>

6.body 元素
用来包含文档内容的元素，也就是浏览器可见区域部分。所有的可见内容，都应该在这
个元素内部进行添加。
<body>...</body>

7.a 元素
一个超链接，后面会详细探讨。
<a href="http://www.baidu.com">百度</a>



三．元素标签探讨
HTML 是一种标记语言，刚才的结构我们已经详细探讨过。这里，我们再剖析一下这些
“标记”或者叫“标签”，书面上经常称作为“元素”的东西是怎么构成的。

1.元素
元素就是一组告诉浏览器如何处理一些内容的标签。每个元素都有一个关键字，比如
<body>、<title>、<meta>都是元素。不同的标签名称代表不同的意义，后面将会涉及到
段落标签、文本标签、链接标签、图片标签等。
元素一般分为两种：单标签（空元素）和双标签。单标签一般用于声明或者插入某个元
素，比如声明字符编码就用<meta>，插入图片就用<img>；双标签一般用于设置一段区域的
内容，将其包含起来，比如段落<p>...</p>。

2.属性和值
元素除了有单双之分，元素的内部还可以设置属性和值。这些属性值用来改变元素某些
方面的行为。比如超链接：<a>中的 href 属性，里面替换网址即可链接到不同的网站。当
然一个元素里面可以设置多个属性，甚至自定义属性。

----------------------------------------------------------------------------------
文本元素

学习要点：
1.文本元素总汇
2.文本元素解析

探讨 HTML5 中的文本元素，所谓文本元素，就是将一段文本设置成相匹配的
结构和含义。

一．文本元素总汇
HTML5 规范指出：使用元素应该完全从元素的语义出发。但是由于历史遗留及用户至上
的原则，这种语义会宽松许多。

元素名称 说明
a 生成超链接
br 强制换行
wbr 可安全换行
b 标记一段文字但不强调
strong 表示重要

i 表示外文或科学术语:倾斜
em 表示强调
code 表示计算机代码
var 表示程序输出
samp 表示变量

kdb 表示用户输入
abbr 表示缩写
cite 表示其他作品的标题
del 表示被删除的文字
s 表示文字已不再确认

dfn 表示术语定义
mark 表示与另一段上下文有关的内容
q 表示引自他处的内容
rp 与 ruby 元素结合使用，标记括号
rt 与 ruby 元素结合使用，标记括号

ruby 表示位于表意文字上方或右方的注音符号
bdo 控制文字的方向
small 表示小号字体内容
sub 表示下标字体
sup 表示上标字体

time 表示时间或日期
u 标记一段文字但不强调
span 通用元素，没有任何语义。一般配合 CSS 修饰。

从上面这张表格中，我们发现文本元素还是非常多的。但实际上，在现实应用中，真正
常用的也就是那么几个，绝大部分是针对英文的。



二．文本元素解析
1.<b>表示关键字和产品名称
<b>HTML5</b>
解释：<b>元素实际作用就是加粗。从语义上来看，就是标记一段文字，但并不是特别
强调或重要性。比如：一段文本中的某些关键字或者产品的名称。

2.<strong>表示重要的文字
<strong>HTML5</strong>
解释：<strong>元素实际作用和<b>一样，就是加粗。从语义上来看，就是强调一段重
要的文本。

3.<br>强制换行、<wbr>安全换行
<br>
Thisabc<wbr>dkedkslakdj<wbr>fkdlsakd is apple.
解释：在任意文本位置键入<br>都会被换行，而在英文单词过长时使用<wbr>会根据浏
览器的宽度适当的裁切换行。

4.<i>表示外文词汇或科技术语
<i>HTML5</i>
解释：<i>元素实际作用就是倾斜。从语义上来看，表示区分周围内容，并不是特别强
调或重要性。

5.<em>加以强调
<em>HTML5</em>
解释：<em>元素实际作用和<i>一样，就是倾斜；从语义上来看，表示对一段文本的强
调。

6.<s>表示不准确或校正
<s>HTML5</s>
解释：<s>元素实际作用就是删除线；从语义上来看，表示不准确的删除。

7.<del>表示删除文字
<del>HTML5</del>
解释：<del>元素实际作用和<s>一样，就是删除线；从语义上来看，表示删除相关文
字。

8.<u>表示给文字加上下划线
<u>HTML5</u>
解释：<u>元素实际作用就是加一条下划线；从语义上来看，并不强调此段文本。

9.<ins>添加一段文本
<ins>HTML5</ins>
解释：<ins>元素实际作用和<u>一样，加一条下划线；从语义上来看，是添加一段文
本，起到强调的作用。

10.<small>添加小号字体
<small>HTML5</small>
解释：<small>元素实际作用就是将文本放小一号。从语义上来看，用于免责声明和澄
清声明。

11.<sub><sup>添加上标和下标
<sub>5</sub>
<sup>5</sup>
解释：<sub>和<sup>元素实际作用就是数学的上标和下标。语义也是如此。

12.<code>等表示输入和输出
<code>HTML5</code>
<var>HTML5</var>
<samp>HTML5</samp>
<kdb>HTML5</kdb>
解释：<code>表示计算机代码片段；<var>表示编程语言中的变量；<samp>表示程序
或计算机的输出；<kdb>表示用户的输入。由于这属于英文范畴的，必须将 lang="en"英语
才能体现效果。

13.<abbr>表示缩写
<abbr>HTML5</abbr>
解释：<abbr>元素没有实际作用；从语义上看，是一段文本的缩写。

14.<dfn>表示定义术语
<dfn>HTML5</dfn>
解释：<dfn>元素就是一般性的倾斜；从语义上看，表示解释一个词或短语的一段文本。

15.<q>引用来自他处的内容
<q>HTML5</q>
解释：<q>元素实际作用就是加了一对双引号。从语义上来看，表示引用来自其他地方
的内容。

16.<cite>引用其他作品的标题
<cite>HTML5</cite>
解释：<cite>元素实际作用就是加粗。从语义上来看，表示引用其他作品的标题。

17.<ruby>语言元素
<ruby>
饕<rp>(</rp><rt>tāo</rt><rp>)</rp>
餮<rp>(</rp><rt>tiè</rt><rp>)</rp>

</ruby>
解释：<ruby>用来为非西方语言提供支持。<rp><rt>用来帮助读者掌握表意语言文字
正确发音。比如：汉语拼音在文字的上方。但目前 Firefox 还不支持此特性。

18.<bdo>设置文字方向
<bdo dir="rtl">HTML5</bdo>
解释：<bdo>必须使用属性 dir 才可以设置，一共两个值：rtl（从右到左）和 ltr（从
左到右）。一般默认是 ltr。还有一个<bdi>元素也是处理方向的，由于是特殊语言的特殊
效果，且主流浏览器大半不支持，忽略。

19.<mark>突出显示文本
<mark>HTML5</mark>
解释：<mark>实际作用就是加上一个黄色的背景，黑色的字；从语义上来看，与上下
文相关而突出的文本，用于记号。

20.<time>表示日期和时间
<time>2015-10-10</time>
解释：<time>元素没有实际作用；从语义上来看，表示日期和时间。

21.<span>表示一般性文本
<span>HTML5</span>
解释：<span>元素没有实际作用；语义上就是表示一段文本，我们经常用它来设置 CSS
等操作。




超链接和路径

学习要点：
1.超链接的属性
2.相对与绝对路径
3.锚点设置

探讨 HTML5 中文本元素最重要的一个超链接，探讨它自身的属性以及路径问题。

一．超链接的属性
<a>元素属于文本元素，有一些私有属性或者叫局部属性。那么，相对应的还有通用属
性或叫做全局属性。这方面的知识，后面会详细探讨。
属性名称 说明
href 指定<a>元素所指资源的 URL
hreflang 指向的链接资源所使用的语言
media 说明所链接资源用于哪种设备
rel 说明文档与所链接资源的关系类型
target 指定用以打开所链接资源的浏览环境
type 说明所链接资源的 MIME 类型（比如 text/html）
在这几个属性当中，只有 href 和 target 一般比较常用，而 href 是必须要用的。其
他几个属性，在<a>元素使用较少，将在 CSS 章节再探讨。

1.href 属性
<a href="http://www.baidu.com">百度</a>
解释：href 是必须属性，否则<a>元素就变成空元素了。如果属性值是 http://开头
的 URL，意味着点击跳转到指定的外部网站。

2.target 属性
<a href="http://www.baidu.com" target="_blank">百度</a>
解释：target 属性告诉浏览器希望将所链接的资源显示在哪里。
属性名称 说明
_blank 在新窗口或标签页中打开文档
_parent 在父窗框组（frameset）中打开文档
_self 在当前窗口打开文档（默认）
_top 在顶层窗口打开文档

这四种最常用的是_blank，新建一个窗口。而_self 是默认，当前窗口打开。_parent
和_top 是基于框架页面的，分别表示在父窗口打开和在整个窗口打开。而 HTML5 中，框架
基本被废弃，只能使用<iframe>元素，且以后大量结合 JavaScript 和 PHP 等语言配合，
框架用的就很少了。



二．相对与绝对路径
所谓相对路径，就是相对于链接页面而言的另一个页面的路径。而绝对路径，就是直接
从 file:///磁盘符开始的完整路径。我们在同一个目录下做上两个页面，其中一个页面链
接到另一个页面。

1.绝对路径
<a href="file:///D:/HTML5/code/index2.html">index2</a>
解释：首先是 file:///开头，然后是磁盘符，然后是一个个的目录层次，找到相应文
件。这种方式最致命的问题是，当整个目录转移到另外的盘符或其他电脑时，目录结构一旦
出现任何变化，链接当即失效。

2.相对路径
<a href="index2.html">index2</a>
解释：相对路径的条件是必须文件都在一个磁盘或目录下，如果是在同一个目录下，直
接属性值就是被链接的文件名.后缀名。如果在同一个主目录下，有多个子目录层次，那就
需要使用目录结构语法。

3.目录语法
同一个目录：index2.html 或./index2.html；
在子目录：xxx/index2.html；
在孙子目录：xxx/xxx/index2.html；
在父目录：../index2.html；
在爷爷目录：../../index2.html；

爷爷目录
  index2.html
  父目录
    index2.html
    当前目录         
      index.html 若想链接 index2.html
      index2.html      
      子目录
        index.html
        孙子目录 
          index2.html

三．锚点设置
超链接也可用来将同一个文档中的另一个元素移入视野。通过属性 id 或 name 实现锚
点定位。
//链接
<a href="#1">第一章</a> <a href="#2">第二章</a> <a href="#3">第三章</a>
//锚点
<a name="1"></a> <a id="3"></a>


--------------------------------------------------------------------
分组元素

学习要点：
1.分组元素总汇
2.分组元素解析

探讨 HTML5 中分组元素的用法。所谓分组，就是用来组织相关内容的 HTML5 元素，清晰有效的进行归类


一．分组元素总汇
为了页面的排版需要，HTML5 提供了几种语义的分组元素。

元素名称 说明
p 表示段落
div 一个没有任何语义的通用元素，和 span 是对应元素
blockquote 表示引自他出的大段内容
pre 表示其格式应被保留的内容
hr 表示段落级别的主题转换，即水平线

ul,ol 表示无序列表，有序列表
li 用于 ul,ol 元素中的列表项
dl,dt,dd 表示包含一系列术语和定义说明的列表。dt 在 dl 内部表示
术语，一般充当标题；dd 在 dl 内部表示定义，一般是内容。
figure 表示图片
figcaption 表示 figure 元素的标题


二．分组元素解析
1.<p>建立段落
<p>这是一个段落</p>
<p>这也是一个段落</p>
解释：<p>元素实际作用就是将内部包含的文本形成一个段落；而段落和段落之间保持
一定量的空隙。

2.<div>通用分组
<div>这是一个通用分组</div>
<div>这是又一个通用分组</div>
解释：<div>元素在早期的版本中非常常用，通过<div>这种一般性分组元素进行布局。
而在 HTML5 中，由于语义的缘故，被其他各种文档元素所代替。和<p>段落的区别就是，两
段文本的上下空隙是没有的，空隙间隔和<br>换行一样。

3.<blockquote>引用大段他出内容
<blockquote>这是一个大段引自他出内容</blockquote>
<blockquote>这是另一个大段引自他出内容</blockquote>
解释：<blockquote>元素实际作用除了和<p>元素一样，有段落空隙的功能，还包含
了首尾缩进的功能。语义上表示，大段的引用他出的内容。

4.<pre>展现格式化内容
<pre>
  #####
    #####
      #####
    #####
  #####
</pre>
解释：<pre>元素实际作用就是编辑器怎么排版的，原封不动的展现出来。当然，这种
只适合简单的排版，复杂的排版就无法满足要求了。

5.<hr>添加分隔
<hr>
解释：<hr>元素实际作用就是添加一条分割线，意图呈现上下文主题的分割。

6.<ul><li>添加无序列表
<ul>
  <li>张三</li>
  <li>李四</li>
  <li>王五</li>
  <li>马六</li>
</ul>
解释：<ul>元素表示无序列表，而<li>元素则是内部的列表项。

7.<ol><li>添加有序列表
<ol>
  <li>张三</li>
  <li>李四</li>
  <li>王五</li>
  <li>马六</li>
</ol>
解释：<ol>元素表示有序列表，而<li>元素则是内部的列表项。<ol>元素目前支持三
种属性。

ol 元素属性
属性名称 说明
start 从第几个序列开始统计：<ol start="2">
reversed 是否倒序排列：<ol reversed>，一半主流浏览器不支持
type 表示列表的编号类型，值分别为：1、a、A、i、I
li 元素属性
属性名称 说明
value 强行设置某个项目的编号。
<li value="7">王五</li>

8.<dl><dt><dd>生成说明列表
<dl>
  <dt>这是一份文件</dt>
  <dd>这里是这份文件的详细内容 1</dd>
  <dd>这里是这份文件的详细内容 2</dd>
</dl>
解释：这三个元素是一个整体，但<dt>或<dd>并非都必须出现。

9.<figure><figcaption>使用插图
<figure>
  <figcaption>这是一张图</figcaption>
  <img src="img.png">
</figure>
解释：这两个元素一般用于图片的布局。